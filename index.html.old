<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<title>Retail Trends Tracker</title>
<link rel="preconnect" href="https://cdnjs.cloudflare.com"/>
<style>
*{box-sizing:border-box;margin:0;padding:0}
body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen,Ubuntu,Cantarell,sans-serif;background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);min-height:100vh;padding:20px}
.container{max-width:1300px;margin:0 auto}
header{text-align:center;color:#fff;margin-bottom:22px}
h1{font-size:2.1em;margin-bottom:6px;text-shadow:2px 2px 4px rgba(0,0,0,.2)}
a.btn{display:inline-block;background:#fff;color:#667eea;font-weight:800;text-decoration:none;padding:8px 12px;border-radius:10px;margin-top:8px}
.controls{background:#fff;padding:12px 16px;border-radius:12px;box-shadow:0 8px 16px rgba(0,0,0,.08);display:flex;gap:10px;align-items:center;justify-content:space-between;margin-bottom:16px}
button{background:#667eea;color:#fff;border:none;padding:10px 16px;border-radius:10px;font-weight:700;cursor:pointer}
button:hover{background:#5568d3}
.grid{display:grid;grid-template-columns:2fr 1fr;gap:16px}
.section{background:#fff;border-radius:12px;box-shadow:0 8px 16px rgba(0,0,0,.08);padding:18px;margin-bottom:16px}
.section h2{border-bottom:3px solid #667eea;padding-bottom:6px;margin-bottom:12px}
.bucket{margin-bottom:12px}
.bucket h3{font-size:1.05rem;margin-bottom:8px;color:#333}
.articles{display:grid;grid-template-columns:repeat(auto-fill,minmax(300px,1fr));gap:12px}
.card{background:#f9f9f9;border-left:4px solid #667eea;border-radius:10px;padding:12px}
.card.new{border-left-color:#22c55e;background:#f0fff4}
.meta{display:flex;justify-content:space-between;font-size:12px;color:#667eea;font-weight:800;text-transform:uppercase;margin-bottom:6px}
.time{color:#888;font-weight:500}
.title{font-weight:800;margin:4px 0;color:#222}
.excerpt{font-size:14px;color:#555;margin:6px 0}
.pill{display:inline-block;background:#22c55e;color:#fff;border-radius:999px;font-size:10px;font-weight:900;padding:2px 6px;margin-left:6px}
.taglist{display:flex;flex-wrap:wrap;gap:6px;margin:6px 0}
.tag{background:#e0e7ff;color:#667eea;border-radius:12px;padding:2px 8px;font-size:11px;font-weight:700}
canvas{max-width:100%;height:320px !important}
.muted{color:#eee}
@media(max-width:1024px){.grid{grid-template-columns:1fr}}
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js" defer></script>
</head>
<body>
<div class="container">
  <header>
    <h1>ðŸ“Š Retail Trends Tracker</h1>
    <div class="muted">Live retail articles â€¢ keyword & brand trends</div>
    <a href="archive.html" class="btn">ðŸ“¦ Open Archive</a>
  </header>

  <div class="controls">
    <div>
      <button id="refresh">ðŸ”„ Reload data</button>
      <span id="status">Ready</span>
    </div>
    <div style="color:#667eea;font-weight:700">Data: <code>/data/articles.json</code></div>
  </div>

  <div class="grid">
    <div>
      <div class="section">
        <h2>ðŸ“° Articles by Time Period</h2>

        <div class="bucket">
          <h3>Today</h3>
          <div id="list-today" class="articles"></div>
        </div>

        <div class="bucket">
          <h3>This Week</h3>
          <div id="list-week" class="articles"></div>
        </div>

        <div class="bucket">
          <h3>This Month</h3>
          <div id="list-month" class="articles"></div>
        </div>

        <div class="bucket">
          <h3>This Year</h3>
          <div id="list-year" class="articles"></div>
        </div>
      </div>
    </div>

    <div>
      <div class="section">
        <h2>ðŸ“ˆ Monthly Keywords</h2>
        <canvas id="monthlyKeywordsChart"></canvas>
      </div>
      <div class="section">
        <h2>ðŸ“ˆ Monthly Brands</h2>
        <canvas id="monthlyBrandsChart"></canvas>
      </div>
    </div>
  </div>
</div>

<script>
// ---------- Config ----------
const DATA_URL = "./data/articles.json";
const NEW_WINDOW_MS = 2*60*60*1000; // 2h
const LS_KEY = "rtt_seen_ts_v1";

// ---------- Helpers ----------
const seenTs = (()=>{ try{ return parseInt(localStorage.getItem(LS_KEY)||"0",10)||0; }catch{ return 0 }})();
const startOfToday  = () => { const d=new Date(); d.setHours(0,0,0,0); return d.getTime(); };
const startOfWeek   = () => { const d=new Date(); d.setHours(0,0,0,0); const day=d.getDay(); d.setDate(d.getDate()-day); return d.getTime(); };
const startOfMonth  = () => { const d=new Date(); d.setHours(0,0,0,0); d.setDate(1); return d.getTime(); };
const startOfYear   = () => { const d=new Date(); d.setHours(0,0,0,0); d.setMonth(0,1); return d.getTime(); };

function timeago(ts){ const s=Math.floor((Date.now()-ts)/1000);
  if(s<60) return s+"s ago"; if(s<3600) return Math.floor(s/60)+"m ago";
  if(s<86400) return Math.floor(s/3600)+"h ago"; return Math.floor(s/86400)+"d ago";
}

function renderCards(containerId, items){
  const now = Date.now();
  const html = items.map(a=>{
    const isNew = (a.published && a.published > seenTs && now - a.published < NEW_WINDOW_MS);
    return `<div class="card ${isNew?'new':''}">
      <div class="meta"><span>${a.source||'Source'}</span><span class="time">${timeago(a.published||Date.now())}</span></div>
      <div class="title">${a.title}${isNew?'<span class="pill">NEW</span>':''}</div>
      <div class="excerpt">${a.excerpt||''}</div>
      <div class="taglist">${(a.keywords||[]).map(t=>`<span class="tag">${t}</span>`).join('')}
      ${(a.brands||[]).map(t=>`<span class="tag">${t}</span>`).join('')}</div>
      <a href="${a.link}" target="_blank" rel="noopener">Read â†’</a>
    </div>`;
  }).join("");
  document.getElementById(containerId).innerHTML = html || '<div class="muted">No articles</div>';
}

// ---------- Charts ----------
function last12MonthLabels(){
  const now = new Date(), labels = [];
  for(let i=11;i>=0;i--){ const d=new Date(now.getFullYear(),now.getMonth()-i,1);
    labels.push(d.toLocaleDateString('en-US',{month:'short',year:'2-digit'})); }
  return labels;
}
function monthIndex(ts){
  const now=new Date(), dt=new Date(ts||Date.now());
  return (now.getFullYear()-dt.getFullYear())*12 + (now.getMonth()-dt.getMonth());
}
function countMonthly(items, field){
  const labels=last12MonthLabels(); const buckets={};
  for(const a of items){ if(!a[field]||!a.published) continue;
    const diff=monthIndex(a.published); const idx=11-diff;
    if(idx<0||idx>11) continue;
    for(const t of a[field]){ if(!buckets[t]) buckets[t]=Array(12).fill(0); buckets[t][idx]+=1; }
  }
  return {labels,buckets};
}
function topTerms(buckets,n=8){
  return Object.entries(buckets).map(([k,arr])=>[k,arr.reduce((s,v)=>s+v,0)])
    .sort((a,b)=>b[1]-a[1]).slice(0,n).map(([k])=>k);
}
function palette(k){ const c=['#667eea','#764ba2','#f093fb','#4facfe','#43e97b','#fa709a','#30cfd0','#ffbe0b','#8338ec','#3a86ff','#06ffa5','#fb5607']; return c[k % c.length]; }
let kwChart, brChart;
function renderCharts(items){
  const kw=countMonthly(items,'keywords'); const br=countMonthly(items,'brands');
  const kwTerms=topTerms(kw.buckets,8); const brTerms=topTerms(br.buckets,8);

  const kwCtx=document.getElementById('monthlyKeywordsChart').getContext('2d');
  if(kwChart) kwChart.destroy();
  kwChart=new Chart(kwCtx,{type:'line',data:{labels:kw.labels,datasets:kwTerms.map((t,i)=>({label:t,data:kw.buckets[t],borderColor:palette(i),backgroundColor:palette(i)+'22',tension:.35,fill:false,borderWidth:2}))},options:{responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:true}}}});

  const brCtx=document.getElementById('monthlyBrandsChart').getContext('2d');
  if(brChart) brChart.destroy();
  brChart=new Chart(brCtx,{type:'line',data:{labels:br.labels,datasets:brTerms.map((t,i)=>({label:t,data:br.buckets[t],borderColor:palette(i),backgroundColor:palette(i)+'22',tension:.35,fill:false,borderWidth:2}))},options:{responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:true}}}});
}

// ---------- Load + Bucket ----------
async function loadData(bust=false){
  document.getElementById('status').textContent='Loadingâ€¦';
  const url=bust? DATA_URL+'?t='+Date.now(): DATA_URL;
  const res=await fetch(url); const data=await res.json();
  const items=(data.items||[]).filter(a=>a.published).sort((a,b)=>b.published-a.published);

  // buckets
  const t0=startOfToday(), w0=startOfWeek(), m0=startOfMonth(), y0=startOfYear();
  renderCards('list-today', items.filter(a=>a.published>=t0).slice(0,24));
  renderCards('list-week',  items.filter(a=>a.published>=w0).slice(0,24));
  renderCards('list-month', items.filter(a=>a.published>=m0).slice(0,24));
  renderCards('list-year',  items.filter(a=>a.published>=y0).slice(0,24));

  renderCharts(items);
  document.getElementById('status').textContent='Updated '+new Date(data.generatedAt).toLocaleString();
}
document.getElementById('refresh').addEventListener('click', async ()=>{
  await loadData(true); localStorage.setItem(LS_KEY,String(Date.now()));
});
loadData().catch(e=> document.getElementById('status').textContent='Error: '+e.message);
</script>
</body>
</html>
